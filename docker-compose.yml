services:
  hashservice:
    image: ${DOCKER_REGISTRY-}hashservice
    build:
      context: .
      dockerfile: Services/HashService/Dockerfile
    container_name: hashservice
    depends_on:
      - redis
      - rabbitmq
    # ports:
    #   - "8082:8082"
    environment:
      # ASPNETCORE_URLS: "http://0.0.0.0:8082"
      ConnectionStrings__rabbitmq: "host=rabbitmq:5672;username=guest;password=guest;publisherConfirms=true"
      ConnectionStrings__redis: "redis:6379"
    restart: always
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # ports:
    #   - "5672:5672" # RabbitMQ Protocol
    #   - "15672:15672" # UI
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    # ports:
    #   - "6379:6379"
    networks:
      - app-network

  postservice:
    image: ${DOCKER_REGISTRY-}postservice
    build:
      context: .
      dockerfile: Services/PostService/Dockerfile
    container_name: postservice
    depends_on:
      - rabbitmq
    # ports:
    #   - "8080:8080"
    environment:
      ConnectionStrings__postgres: "Host=postgres;Port=5432;Database=postservice_db;Username=postgres;Password=postgres"
      ConnectionStrings__mongodb: "mongodb://mongo:27017"
      ConnectionStrings__rabbitmq: "host=rabbitmq:5672;username=guest;password=guest;publisherConfirms=true"
      # ASPNETCORE_URLS: "http://0.0.0.0:8080"
    restart: always
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postservice_db
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
    - app-network

  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    # ports:
    #   - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
    - app-network

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: Services/APIGateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
        ASPNETCORE_URLS: "http://0.0.0.0:8080"

volumes:
  postgres_data:
  mongo_data:

networks:
  app-network:
    external: true
